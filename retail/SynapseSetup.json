{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "environment_code":{
         "type":"String",
         "metadata":{
            "description":"Suffix added to all resource name to make them unique. Should consist of only lower case alphabet and numbers. Total length should be less than 6 characters."
         }
      },
      "sql_administrator_login_password":{
         "type":"SecureString",
         "metadata":{
            "description":"Password for SQL Admin. Should have atleast one capital, one small alphapbet with one digit and one special character.Password should be at least 8 characters long."
         }
      },
      "pbi_workspace_id":{
         "type":"String",
         "metadata":{
            "description":"PowerBi workspace Id."
         }
      }
   },
  "variables": {
    "resource_group_name": "[resourceGroup().name]",
    "subscriptionid": "[subscription().subscriptionId]",
    "unique_suffix": "[concat(uniqueString(deployment().name), '-', parameters('environment_code'))]",
    "location": "[resourceGroup().location]",
    "key_vault_name": "[concat('kv-',variables('unique_suffix'))]",
    "storage_account_name": "[if(greater(length(concat('stretail', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('stretail',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('stretail',parameters('environment_code'),uniqueString(deployment().name)) )]",
    "workspace_name_synapseretail": "[concat('synapseretail',parameters('environment_code'),uniqueString(deployment().name))]",
    "default_data_lake_storage_file_system_name": "retail-data",
    "default_data_lake_storage_account_url": "[concat('https://', variables('storage_account_name'), '.dfs.core.windows.net')]",
    "sql_compute_name": "RetailDW",
    "sql_administrator_login_id": "labsqladmin",
    "spark_compute_name": "Retail",
    "sql_server_sku": "DW100c",
    "spark_auto_scale_enabled": "true",
    "spark_min_node_count": "3",
    "spark_max_node_count": "20",
    "spark_node_count": "1",
    "spark_node_size_family": "MemoryOptimized",
    "spark_node_size": "Large",
    "spark_auto_pause_enabled": "true",
    "spark_auto_pause_delay_in_minutes": "5",
    "spark_version": "2.4",
    "app_retaildemo_name": "[concat('retaildemo-app-',variables('unique_suffix'))]",
    "serverfarms_app_retaildemo_name": "[concat('asp-retaildemo-app-',variables('unique_suffix'))]",
  	"cosmosdb_retail2_name":"[if(greater(length(concat('cosmosdb-retail2-', uniqueString(deployment().name),parameters('environment_code'))), 43), substring(concat('cosmosdb-retail2-', uniqueString(deployment().name),parameters('environment_code')),0,43) , concat('cosmosdb-retail2-', uniqueString(deployment().name),parameters('environment_code')) )]",
    "cosmos_database_name": "retail-foottraffic"
  },
  "resources": [
    {
      "name": "default",
      "type": "Microsoft.Resources/tags",
      "apiVersion": "2019-10-01",
      "properties": {
        "tags": {
          "DeploymentId": "[parameters('environment_code')]",
          "UniqueId": "[uniqueString(deployment().name)]",
          "WsId": "[parameters('pbi_workspace_id')]"
        }
      }
    },
	{
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-10-15",
            "name": "[variables('cosmosdb_retail2_name')]",
            "location": "[variables('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": true,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": []
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2021-10-15",
            "name": "[concat(variables('cosmosdb_retail2_name'),'/', variables('cosmos_database_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmos_database_name')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2021-10-15",
            "name": "[concat(variables('cosmosdb_retail2_name'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2021-10-15",
            "name": "[concat(variables('cosmosdb_retail2_name'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2021-10-15",
            "name": "[concat(variables('cosmosdb_retail2_name'),'/', variables('cosmos_database_name'),'/retailcosmos')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_retail2_name'),variables('cosmos_database_name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "retailcosmos",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/TransactionType"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    },
                    "analyticalStorageTtl": -1
                },
				"options": {
          "autoscaleSettings": {
            "maxThroughput": "4000"
          }
        }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2021-10-15",
            "name": "[concat(variables('cosmosdb_retail2_name'),'/',variables('cosmos_database_name'),'/retaildb')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_retail2_name'),variables('cosmos_database_name'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "retaildb",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/beforefoottraffic"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    },
                    "analyticalStorageTtl": -1
                },
				"options": {
          "autoscaleSettings": {
            "maxThroughput": "4000"
          }
        }
            }
        },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('key_vault_name')]",
      "apiVersion": "2018-02-14",
      "location": "[variables('location')]",
      "properties": {
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "vaultUri": "[concat('https://', variables('key_vault_name'), '.vault.azure.net/')]",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [

        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('key_vault_name'), '/SqlPassword')]",
      "apiVersion": "2018-02-14",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('key_vault_name'))]"
      ],
      "properties": {
        "value": "[parameters('sql_administrator_login_password')]"
      }
    },
    {
      "name": "[variables('workspace_name_synapseretail')]",
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2021-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name'), '/blobServices/default/containers/', variables('default_data_lake_storage_file_system_name'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('default_data_lake_storage_account_url')]",
          "filesystem": "[variables('default_data_lake_storage_file_system_name')]"
        },
        "sqlAdministratorLogin": "[variables('sql_administrator_login_id')]",
        "sqlAdministratorLoginPassword": "[parameters('sql_administrator_login_password')]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2021-05-01",
          "name": "allowAll",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_synapseretail'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        }
      ]
    },
    {
      "name": "[concat(variables('workspace_name_synapseretail'), '/', variables('spark_compute_name'))]",
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2021-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', variables('workspace_name_synapseretail'))]"
      ],
      "properties": {
        "nodeCount": "[variables('spark_node_count')]",
        "nodeSizeFamily": "[variables('spark_node_size_family')]",
        "nodeSize": "[variables('spark_node_size')]",
        "autoScale": {
          "enabled": "[variables('spark_auto_scale_enabled')]",
          "minNodeCount": "[variables('spark_min_node_count')]",
          "maxNodeCount": "[variables('spark_max_node_count')]"
        },
        "autoPause": {
          "enabled": "[variables('spark_auto_pause_enabled')]",
          "delayInMinutes": "[variables('spark_auto_pause_delay_in_minutes')]"
        },
        "sparkVersion": "[variables('spark_version')]"
      }
    },
    {
      "name": "[concat(variables('workspace_name_synapseretail'), '/', variables('sql_compute_name'))]",
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2021-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_synapseretail'))]"
      ],
      "sku": {
        "name": "[variables('sql_server_sku')]"
      },
      "properties": {
        "createMode": "Default",
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "name": "[variables('storage_account_name')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "[concat('default/', variables('default_data_lake_storage_file_system_name'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
          ]
        }
      ]
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "GET"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "POST"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "DELETE"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "MERGE"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": [

          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": [

          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/adfstagedcopytempdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/adfstagedpolybasetempdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/customer-churn-data')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/dataverse-retaildreamd-unqe3e6254ff0834070858f5cbc69b77')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/iot')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/magentocontosomergerdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/magentosource')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/market-basket')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/marketingdb-staging')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/rawdata-customerinsight')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/retail-customerreviewsdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/retail-notebook-data')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/retailcog-skillset-image-projection')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/retaildata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/sapdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/thermostat')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/twitterdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Blob"
      }
    },
	 {
      "name": "[concat( variables('storage_account_name'), '/default/video')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Blob"
      }
    },
		 {
      "name": "[concat( variables('storage_account_name'), '/default/videoanalyzer')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
		 {
      "name": "[concat( variables('storage_account_name'), '/default/retail20')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
		 {
      "name": "[concat( variables('storage_account_name'), '/default/customcsv')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[variables('serverfarms_app_retaildemo_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "eastus",
      "sku": {
        "name": "S1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('app_retaildemo_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_retaildemo_name'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('app_retaildemo_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('app_retaildemo_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_retaildemo_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {

        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('app_retaildemo_name'), '/web')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('app_retaildemo_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "DOTNETCORE|3.1",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$', variables('app_retaildemo_name'))]",
        "azureStorageAccounts": {

        },
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [

          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    }
  ],
   "outputs":{
      
   }
}