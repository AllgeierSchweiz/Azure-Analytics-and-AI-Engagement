{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "workflows_logic_storage_trigger_name":{
         "type":"String",
         "metadata":{
            "description":""
         }
      },
      "workflows_logic_video_indexer_trigger_name":{
         "type":"String",
         "metadata":{
            "description":""
         }
      },
      "video_indexer_api_key":{
        "type":"String",
        "metadata":{
           "description":""
        }
     },
     "cosmos_database_name_retailinventorydb":{
        "type":"String",
        "metadata":{
           "description":""
        }
     },
     "cosmos_database_container_name_videoindexerinsights":{
        "type":"String",
        "metadata":{
           "description":""
        }
     },
     "cosmos_database_container_name_Transcript":{
        "type":"String",
        "metadata":{
           "description":""
        }
     },
     "connections_cosmosdb_name":{
        "type":"String",
        "metadata":{
           "description":""
        }
     },
      "location":{
         "type":"String",
         "metadata":{
            "description":""
         }
      }
   },
   "variables":{},
   "resources":[
      {
         "name": "[variables('workflows_logic_storage_trigger_name')]",
         "type": "Microsoft.Logic/workflows",
         "apiVersion": "2017-07-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]",
         "[resourceId('Microsoft.Logic/workflows', variables('workflows_logic_video_indexer_trigger_name'))]"
         ],
         "properties": {
         "state": "Enabled",
         "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
               "$connections": {
               "defaultValue": {

               },
               "type": "Object"
               }
            },
            "triggers": {
               "manual": {
               "type": "Request",
               "kind": "Http",
               "inputs": {
                  "schema": {
                     "items": {
                     "properties": {
                        "data": {
                           "properties": {
                           "api": {
                              "type": "string"
                           },
                           "blobType": {
                              "type": "string"
                           },
                           "clientRequestId": {
                              "type": "string"
                           },
                           "contentLength": {
                              "type": "integer"
                           },
                           "contentType": {
                              "type": "string"
                           },
                           "eTag": {
                              "type": "string"
                           },
                           "requestId": {
                              "type": "string"
                           },
                           "sequencer": {
                              "type": "string"
                           },
                           "storageDiagnostics": {
                              "properties": {
                                 "batchId": {
                                 "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "url": {
                              "type": "string"
                           }
                           },
                           "type": "object"
                        },
                        "dataVersion": {
                           "type": "string"
                        },
                        "eventTime": {
                           "type": "string"
                        },
                        "eventType": {
                           "type": "string"
                        },
                        "id": {
                           "type": "string"
                        },
                        "metadataVersion": {
                           "type": "string"
                        },
                        "subject": {
                           "type": "string"
                        },
                        "topic": {
                           "type": "string"
                        }
                     },
                     "required": [
                        "topic",
                        "subject",
                        "eventType",
                        "id",
                        "data",
                        "dataVersion",
                        "metadataVersion",
                        "eventTime"
                     ],
                     "type": "object"
                     },
                     "type": "array"
                  }
               }
               }
            },
            "actions": {
               "For_each": {
               "foreach": "@triggerBody()",
               "actions": {
                  "Create_SAS_URI_by_path": {
                     "runAfter": {

                     },
                     "type": "ApiConnection",
                     "inputs": {
                     "body": {
                        "Permissions": "Read"
                     },
                     "host": {
                        "connection": {
                           "name": "[concat('@parameters(''$connections'')','[''',variables('connections_azureblob_name'),'''][''connectionId'']')]"
                        }
                     },
                     "method": "post",
                     "path": "/datasets/default/CreateSharedLinkByPath",
                     "queries": {
                        "path": "@{substring(items('For_each')?['data']?['url'], indexof(items('For_each')?['data']?['url'], 'source-files'))}"
                     }
                     }
                  },
                  "HTTP": {
                     "runAfter": {
                     "Create_SAS_URI_by_path": [
                        "Succeeded"
                     ]
                     },
                     "type": "Http",
                     "inputs": {
                     "headers": {
                        "Content-Type\n": "multipart/form-data",
                        "Ocp-Apim-Subscription-Key\n": "[parameters('video_indexer_api_key')]"
                     },
                     "method": "POST",
                     "queries": {
                        "accessToken": "@{body('Get_Video_Indexer_Token')}",
                        "accountId": "[parameters('video_indexer_account_id')]",
                        "callbackUrl": "[listCallbackURL(variables('logic_app_indexer_trigger_url'), '2019-05-01').value]",
                        "language": "English",
                        "location": "[variables('location')]",
                        "name": "@{substring(substring(items('For_each')?['data']?['url'], indexof(items('For_each')?['data']?['url'], 'source-files')), 13)}",
                        "privacy": "Public",
                        "videoUrl": "@{body('Create_SAS_URI_by_path')?['WebUrl']}"
                     },
                     "uri": "[concat('https://api.videoindexer.ai/trial/Accounts/',parameters('video_indexer_account_id'),'/Videos')]"
                     }
                  }
               },
               "runAfter": {
                  "Get_Video_Indexer_Token": [
                     "Succeeded"
                  ]
               },
               "type": "Foreach"
               },
               "Get_Video_Indexer_Token": {
               "runAfter": {

               },
               "type": "Http",
               "inputs": {
                  "headers": {
                     "Ocp-Apim-Subscription-Key": "[parameters('video_indexer_api_key')]"
                  },
                  "method": "GET",
                  "uri": "[concat('https://api.videoindexer.ai/Auth/trial/Accounts/',parameters('video_indexer_account_id'),'/AccessToken?allowEdit=true')]"
               }
               }
            },
            "outputs": {

            }
         },
         "parameters": {
            "$connections": {
               "value": {
               "[variables('connections_azureblob_name')]": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]",
                  "connectionName": "[variables('connections_azureblob_name')]",
                  "id": "[concat('/subscriptions/',variables('subscriptionId'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/azureblob')]"
               }
               }
            }
         }
         }
      },
      {
         "name": "[variables('workflows_logic_video_indexer_trigger_name')]",
         "type": "Microsoft.Logic/workflows",
         "apiVersion": "2017-07-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.Web/connections', variables('connections_cosmosdb_name'))]"
         ],
         "properties": {
         "state": "Enabled",
         "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
               "$connections": {
               "defaultValue": {

               },
               "type": "Object"
               }
            },
            "triggers": {
               "manual": {
               "type": "Request",
               "kind": "Http",
               "inputs": {
                  "method": "POST"
               }
               }
            },
            "actions": {
               "Condition": {
               "actions": {
                  "Create_or_update_document_(V2)": {
                     "runAfter": {
                     "Get_Video_Insights": [
                        "Succeeded"
                     ]
                     },
                     "type": "ApiConnection",
                     "inputs": {
                     "body": "@body('Get_Video_Insights')",
                     "host": {
                        "connection": {
                           "name": "[concat('@parameters(''$connections'')','[''',variables('connections_cosmosdb_name'),'''][''connectionId'']')]"
                        }
                     },
                     "method": "post",
                     "path": "/v3/dbs/@{encodeURIComponent('videoindexer')}/colls/@{encodeURIComponent('videoindexerinsights')}/docs"
                     }
                  },
                  "Get_Video_Indexer_Token": {
                     "runAfter": {

                     },
                     "type": "Http",
                     "inputs": {
                     "headers": {
                        "Ocp-Apim-Subscription-Key": "[parameters('video_indexer_api_key')]"
                     },
                     "method": "GET",
                     "uri": "[concat('https://api.videoindexer.ai/Auth/trial/Accounts/',parameters('video_indexer_account_id'),'/AccessToken?allowEdit=true')]"
                     }
                  },
                  "Get_Video_Insights": {
                     "runAfter": {
                     "Get_Video_Indexer_Token": [
                        "Succeeded"
                     ]
                     },
                     "type": "Http",
                     "inputs": {
                     "headers": {
                        "Ocp-Apim-Subscription-Key\n": "[parameters('video_indexer_api_key')]"
                     },
                     "method": "GET",
                     "queries": {
                        "accessToken": "@{body('Get_Video_Indexer_Token')}"
                     },
                     "uri": "[variables('logic_app_concatfunc')]"
                     }
                  }
               },
               "runAfter": {

               },
               "expression": {
                  "and": [
                     {
                     "equals": [
                        "@triggerOutputs()['queries']['state']",
                        "Processed"
                     ]
                     }
                  ]
               },
               "type": "If"
               }
            },
            "outputs": {

            }
         },
         "parameters": {
            "$connections": {
               "value": {
               "[variables('connections_cosmosdb_name')]": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_cosmosdb_name'))]",
                  "connectionName": "[variables('connections_cosmosdb_name')]",
                  "id": "[concat('/subscriptions/',variables('subscriptionId'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/documentdb')]"
               }
               }
            }
         }
         }
      }
   ],
   "outputs":{
      
   }
}