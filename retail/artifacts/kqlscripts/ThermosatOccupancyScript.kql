// ∗∗∗∗∗∗∗∗∗ Important – Do not use in production, for demonstration purposes only – please review the legal notices before continuing ∗∗∗∗∗ */

//Query 1
//What is the average temp every 1 min?
Thermostat
| where EnqueuedTimeUTC > ago(7d)
| where DeviceId == 'TH005'
| summarize avg(Temp) by bin(EnqueuedTimeUTC,1m)
| render timechart 


//Is there any missing data? 
//make-series
//Create series of specified aggregated values along specified axis.
Thermostat
| where EnqueuedTimeUTC > ago(6h)
| where DeviceId == 'TH005'
| make-series AvgTemp=avg(Temp) on EnqueuedTimeUTC from ago(6h) to now() step 1m   
| render timechart 

//How can I fill the missing values?
//series_fill_linear()
//Performs linear interpolation of missing values in a series.
Thermostat
| where EnqueuedTimeUTC > ago(6h)
| where DeviceId == 'TH005'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(6h) to now() step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| render timechart 

Occupancy
| summarize avg_aisle_time_spent=avg(avg_aisle_time_spent)  by StoreId,EnqueuedTimeUTC,
 hour=datetime_part("Hour",EnqueuedTimeUTC) | render areachart 


//What will be the temprature for next one hour?
Thermostat
| where EnqueuedTimeUTC > ago(2d)
| where DeviceId == 'TH005'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(2d) to now()+15m step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| extend forecast = series_decompose_forecast(NoGapsTemp, 15)
| render timechart with(title='Forecasting the next 15min by Time Series Decmposition')


//Are there any anomalies for this device?
Thermostat
| where EnqueuedTimeUTC > ago(3d)
| where DeviceId == 'TH005'
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(3d) to now() step 1m   
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, NoGapsTemp
| extend anomalies = series_decompose_anomalies(NoGapsTemp,1) 
| render anomalychart with(anomalycolumns=anomalies)


//What the anomalies I shoudl focus on across all devices?
Thermostat
| where EnqueuedTimeUTC > ago(3d)
| make-series AvgTemp=avg(Temp) default=real(null) on EnqueuedTimeUTC from ago(3d) to now() step 1m by DeviceId
| extend NoGapsTemp=series_fill_linear(AvgTemp)
| project EnqueuedTimeUTC, DeviceId, NoGapsTemp
| extend anomalies = series_decompose_anomalies(NoGapsTemp, 1)
| mv-expand EnqueuedTimeUTC, anomalies, NoGapsTemp
| where anomalies == 1