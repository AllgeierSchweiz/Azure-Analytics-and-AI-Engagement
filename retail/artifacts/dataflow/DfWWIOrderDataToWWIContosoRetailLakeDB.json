{
    "name": "DfWWIOrderDataToWWIContosoRetailLakeDB",
    "properties": {
        "folder": {
            "name": "Load WWI And Magento Data To LakeDB"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "WWISales",
                        "type": "DatasetReference"
                    },
                    "name": "WWISourceSalesData"
                },
                {
                    "dataset": {
                        "referenceName": "WWIData",
                        "type": "DatasetReference"
                    },
                    "name": "WWISourceProductData"
                }
            ],
            "sinks": [
                {
                    "name": "Order"
                }
            ],
            "transformations": [
                {
                    "name": "GetMissingAttributeData"
                },
                {
                    "name": "GetOrderAttributesData"
                },
                {
                    "name": "SelectProductAttributes"
                },
                {
                    "name": "GetBrandName"
                },
                {
                    "name": "Filter"
                }
            ],
            "script": "source(output(\n\t\tSalesId as string,\n\t\tId as string,\n\t\tProductId as string,\n\t\tQuantity as integer,\n\t\tPrice as decimal(10,0),\n\t\tTotalAmount as decimal(10,0),\n\t\tTransactionDate as date,\n\t\tProfitAmount as decimal(10,0),\n\t\tHour as string,\n\t\tMinute as string,\n\t\tStoreId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> WWISourceSalesData\nsource(output(\n\t\tProducts_ID as string,\n\t\tProductID as string,\n\t\tName as string,\n\t\tBrand as string,\n\t\tPrice as string,\n\t\tCategory as string,\n\t\tThumbnail_FileName as string,\n\t\tAdImage_FileName as string,\n\t\tSoundFile_FileName as string,\n\t\tSubCampaigns as string,\n\t\tTargetGender as string,\n\t\tTargetClassification as string,\n\t\tTargetGeneration as string,\n\t\tTags as string,\n\t\tBLECode as string,\n\t\tThumbnail as string,\n\t\tAdImage as string,\n\t\tSoundFile as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> WWISourceProductData\nGetOrderAttributesData derive(EntityCode = 'WideWorldImporters',\n\t\tProductAdjustmentAmount = 0,\n\t\tProductAdjustmentPercentage = .0,\n\t\tItemSku = 'Null',\n\t\tOrderStatus = 'Null',\n\t\tOrderTotalTaxAmount = 0,\n\t\tTotalShippingChargeAmount = .0,\n\t\tProductSalesPriceAmount = OrderTotalInvoicedAmount) ~> GetMissingAttributeData\nWWISourceSalesData select(mapColumn(\n\t\tOrderId = SalesId,\n\t\tCustomerId = Id,\n\t\tProductsId = ProductId,\n\t\tQuantity,\n\t\tProductListPriceAmount = Price,\n\t\tOrderTotalInvoicedAmount = TotalAmount,\n\t\tOrderDate = TransactionDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GetOrderAttributesData\nWWISourceProductData select(mapColumn(\n\t\tProductID = Products_ID,\n\t\tBrand,\n\t\tProductName = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectProductAttributes\nGetMissingAttributeData, SelectProductAttributes lookup(ProductsId == ProductID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> GetBrandName\nGetBrandName filter(!isNull(ProductID)) ~> Filter\nFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'WWImportersContosoOrder',\n\tmapColumn(\n\t\tOrderId,\n\t\tCustomerId,\n\t\tQuantity,\n\t\tProductListPriceAmount,\n\t\tOrderTotalInvoicedAmount,\n\t\tOrderDate,\n\t\tEntityCode,\n\t\tProductAdjustmentAmount,\n\t\tProductAdjustmentPercentage,\n\t\tItemSku,\n\t\tOrderStatus,\n\t\tOrderTotalTaxAmount,\n\t\tTotalShippingChargeAmount,\n\t\tProductSalesPriceAmount,\n\t\tProductId = ProductID,\n\t\tBrand,\n\t\tProductName\n\t)) ~> Order"
        }
    }
}