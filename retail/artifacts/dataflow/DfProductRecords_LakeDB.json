{
    "name": "DfProductRecords_LakeDB",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "MagentoProductData",
                        "type": "DatasetReference"
                    },
                    "name": "sourceMagentoProducts"
                },
                {
                    "dataset": {
                        "referenceName": "MagentoProductData",
                        "type": "DatasetReference"
                    },
                    "name": "MagentoProducts"
                }
            ],
            "sinks": [
                {
                    "name": "ApparelProductType"
                },
                {
                    "name": "Size"
                },
                {
                    "name": "Color"
                },
                {
                    "name": "Item"
                },
                {
                    "name": "Product"
                },
                {
                    "name": "Brand"
                }
            ],
            "transformations": [
                {
                    "name": "GetTemporaryDistinctProductType"
                },
                {
                    "name": "GetDistinctProductType"
                },
                {
                    "name": "GetApparelProductTypeId"
                },
                {
                    "name": "GetTemporaryDistinctSize"
                },
                {
                    "name": "ConditionalSplit"
                },
                {
                    "name": "GetSizeId"
                },
                {
                    "name": "GetTemporaryDistinctColor"
                },
                {
                    "name": "RemoveNullTableColor"
                },
                {
                    "name": "GetColorId"
                },
                {
                    "name": "Select"
                },
                {
                    "name": "ProductRecords"
                },
                {
                    "name": "GetBrandNameAndColor"
                },
                {
                    "name": "Select1"
                },
                {
                    "name": "SelectBrandAttribute"
                },
                {
                    "name": "GetBrandName"
                },
                {
                    "name": "GetDistinctBrand"
                },
                {
                    "name": "GetBrandId"
                },
                {
                    "name": "GetSizeDescription"
                },
                {
                    "name": "GetEntityCodeForColor"
                },
                {
                    "name": "GetEntityCodeForApparelProductTypeId"
                },
                {
                    "name": "GetEntityCodeForBrand"
                },
                {
                    "name": "GetEntityCodeForItem"
                },
                {
                    "name": "GetEntityCodeForProduct"
                }
            ],
            "script": "source(output(\n\t\tsku as string,\n\t\tgroup as string,\n\t\tattribute_set_code as string,\n\t\tproduct_type as string,\n\t\tcategories as string,\n\t\tname as string,\n\t\tdescription as string,\n\t\tshort_description as string,\n\t\tprice as string,\n\t\tsize as string,\n\t\tcolor as string,\n\t\tProductId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceMagentoProducts\nsource(output(\n\t\tsku as string,\n\t\tgroup as string,\n\t\tattribute_set_code as string,\n\t\tproduct_type as string,\n\t\tcategories as string,\n\t\tname as string,\n\t\tdescription as string,\n\t\tshort_description as string,\n\t\tprice as string,\n\t\tsize as string,\n\t\tcolor as string,\n\t\tProductId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MagentoProducts\nsourceMagentoProducts aggregate(groupBy(product_type),\n\tname = count(name)) ~> GetTemporaryDistinctProductType\nGetTemporaryDistinctProductType select(mapColumn(\n\t\tproduct_type\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GetDistinctProductType\nGetDistinctProductType rank(asc(product_type, true),\n\toutput(Rank as long)) ~> GetApparelProductTypeId\nsourceMagentoProducts aggregate(groupBy(size),\n\tnop = count(name)) ~> GetTemporaryDistinctSize\nGetTemporaryDistinctSize split(!isNull(size),\n\tdisjoint: false) ~> ConditionalSplit@(GetDistinctRecordsNotNullSize, GetDistinctRecordsNullSize)\nConditionalSplit@GetDistinctRecordsNotNullSize rank(asc(size, true),\n\toutput(Rank as long)) ~> GetSizeId\nsourceMagentoProducts aggregate(groupBy(color),\n\tname = count(name)) ~> GetTemporaryDistinctColor\nGetTemporaryDistinctColor split(!isNull(color),\n\tdisjoint: false) ~> RemoveNullTableColor@(GetDistinctRecordsNotNullColor, GetDistinctRecordsNullColor)\nRemoveNullTableColor@GetDistinctRecordsNotNullColor rank(asc(color, true),\n\toutput(Rank as long)) ~> GetColorId\nSelect1 select(mapColumn(\n\t\tsku,\n\t\tname,\n\t\tdescription,\n\t\tprice,\n\t\tProductId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nMagentoProducts select(mapColumn(\n\t\tItemSku = sku,\n\t\tProductCategories = categories,\n\t\tProductName = name,\n\t\tProductDescription = description,\n\t\tProductShortDescription = short_description,\n\t\tProductId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProductRecords\nProductRecords derive(BrandName = split(substring(ProductName, 0, length(ProductName)-2), \" \")[1],\n\t\tSplitCol = split(substring(ProductName, 0, length(ProductName)-2), \" \")[2],\n\t\tColorName = split(substring(ProductName, 0, length(ProductName)-0), \" \")[3]) ~> GetBrandNameAndColor\nMagentoProducts select(mapColumn(\n\t\tsku,\n\t\tgroup,\n\t\tattribute_set_code,\n\t\tproduct_type,\n\t\tcategories,\n\t\tname,\n\t\tdescription,\n\t\tshort_description,\n\t\tprice,\n\t\tsize,\n\t\tcolor,\n\t\tProductId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nMagentoProducts select(mapColumn(\n\t\tname,\n\t\tProductId,\n\t\tdescription\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBrandAttribute\nSelectBrandAttribute derive(BrandName = split(substring(name, 0, length(name)-2), \" \")[1],\n\t\tSize = split(substring(name, 0, length(name)-2), \" \")[2]) ~> GetBrandName\nGetBrandName aggregate(groupBy(BrandName),\n\tNoOfBrand = count(BrandName)) ~> GetDistinctBrand\nGetDistinctBrand rank(asc(BrandName, true),\n\toutput(Rank as long)) ~> GetBrandId\nGetSizeId derive(Des = concat(size, ' Size'),\n\t\tEntityCode = 'Contoso') ~> GetSizeDescription\nGetColorId derive(EntityCode = 'Contoso') ~> GetEntityCodeForColor\nGetApparelProductTypeId derive(EntityCode = 'Contoso') ~> GetEntityCodeForApparelProductTypeId\nGetBrandId derive(EntityCode = 'Contoso') ~> GetEntityCodeForBrand\nSelect derive(EntityCode = 'Contoso') ~> GetEntityCodeForItem\nGetBrandNameAndColor derive(EntityCode = concat('Contoso','-',toString(ProductId))) ~> GetEntityCodeForProduct\nGetEntityCodeForApparelProductTypeId sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'ApparelProductType',\n\trecreate:true,\n\tmapColumn(\n\t\tApparelProductTypeId = product_type,\n\t\tApparelProductTypeName = Rank,\n\t\tEntityCode\n\t)) ~> ApparelProductType\nGetSizeDescription sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'Size',\n\trecreate:true,\n\tmapColumn(\n\t\tSizeName = size,\n\t\tSizeId = Rank,\n\t\tSizeDescription = Des\n\t)) ~> Size\nGetEntityCodeForColor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'Color',\n\trecreate:true,\n\tmapColumn(\n\t\tColorName = color,\n\t\tColorId = Rank\n\t)) ~> Color\nGetEntityCodeForItem sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'Item',\n\trecreate:true,\n\tmapColumn(\n\t\tItemSku = sku,\n\t\tItemName = name,\n\t\tItemDescription = description,\n\t\tListPrice = price,\n\t\tProductId,\n\t\tEntityCode\n\t)) ~> Item\nGetEntityCodeForProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'RetailProduct',\n\trecreate:true,\n\tmapColumn(\n\t\tItemSku,\n\t\tProductCategories,\n\t\tProductName,\n\t\tProductDescription,\n\t\tProductShortDescription,\n\t\tProductId,\n\t\tBrandName,\n\t\tProductSize = SplitCol,\n\t\tProductColor = ColorName,\n\t\tEntityCode\n\t)) ~> Product\nGetEntityCodeForBrand sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tstore: 'synapse',\n\tdatabaseType: 'spark',\n\tformat: 'table',\n\tdatabase: 'WWImportersContosoRetailLakeDB',\n\ttableName: 'Brand',\n\trecreate:true,\n\tmapColumn(\n\t\tBrandName,\n\t\tBrandId = Rank,\n\t\tEntityCode\n\t)) ~> Brand"
        }
    }
}