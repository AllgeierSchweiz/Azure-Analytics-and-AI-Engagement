{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment_code": {
        "type": "String",
        "metadata": {
          "description": "Suffix added to all resource name to make them unique. Should consist of only lower case alphabet and numbers. Total length should be less than 6 characters."
        }
    },
    "sql_administrator_login_password": {
      "type": "String",
      "metadata": {
        "description": "Password for SQL Admin. Should have atleast one capital, one small alphapbet with one digit and one special character.Password should be at least 8 characters long."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "unique_suffix": "[concat(uniqueString(deployment().name), '-', parameters('environment_code'))]",
    "sites_adx_thermostat_realtime_name": "[concat('app-realtime-kpi-analytics-',variables('unique_suffix'))]",
    "serverfarm_adx_thermostat_realtime_name": "[concat('asp-realtime-kpi-analytics-',variables('unique_suffix'))]",
    "namespaces_adx_thermostat_occupancy_name": "[concat('adx-thermostat-occupancy-',variables('unique_suffix'))]",
    "storage_account_name": "[if(greater(length(concat('storage', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('storage',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('storage',parameters('environment_code'),uniqueString(deployment().name)) )]",
    "mssql_server_name": "[concat('mssql-',variables('unique_suffix'))]",
    "mssql_administrator_login": "labsqladmin",
    "mssql_database_name": "SalesDb",
    "serverfarm_asp_fabric_name": "[concat('asp-fabric-',variables('unique_suffix'))]",
    "app_fabric_name": "[concat('app-fabric-',variables('unique_suffix'))]"
  },
  "resources": [
    {
        "name": "default",
        "type": "Microsoft.Resources/tags",
        "apiVersion": "2019-10-01",
        "properties": {
          "tags": {
              "DeploymentId": "[parameters('environment_code')]",
              "UniqueId": "[uniqueString(deployment().name)]"
          }
        }
    },
    {
      "name": "[variables('mssql_server_name')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-05-01-preview",
      "location": "[variables('location')]",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[variables('mssql_administrator_login')]",
        "administratorLoginPassword": "[parameters('sql_administrator_login_password')]",
        "version": "12.0"
      }
    },
    {
      "name": "[concat(variables('mssql_server_name'), '/', variables('mssql_database_name'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2022-05-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('mssql_server_name'))]"
      ],
      "sku": {
        "name": "GP_S_Gen5",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 1
      },
      "kind": "v12.0,user,vcore,serverless",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "name": "[concat(variables('mssql_server_name'), '/AllowAzureIPs')]",
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2022-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', variables('mssql_server_name'))]",
        "[concat('Microsoft.Sql/servers/', variables('mssql_server_name'),'/databases/' , variables('mssql_database_name'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    },
    {
      "name": "[variables('serverfarm_adx_thermostat_realtime_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('sites_adx_thermostat_realtime_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_adx_thermostat_realtime_name'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('sites_adx_thermostat_realtime_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('sites_adx_thermostat_realtime_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_adx_thermostat_realtime_name'))]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "PYTHON|3.9",
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 1
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_adx_thermostat_realtime_name'), '/ftp')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_adx_thermostat_realtime_name'), '/scm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_adx_thermostat_realtime_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "PYTHON|3.9",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2019",
        "httpLoggingEnabled": false,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$', variables('sites_adx_thermostat_realtime_name'))]",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.0",
        "ftpsState": "AllAllowed",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 1,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_adx_thermostat_realtime_name'), '/', variables('sites_adx_thermostat_realtime_name'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
      ],
      "properties": {
        "siteName": "[variables('sites_adx_thermostat_realtime_name')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2021-11-01",
      "name": "[variables('namespaces_adx_thermostat_occupancy_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "disableLocalAuth": false,
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/RootManageSharedAccessKey')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/occupancy')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 1,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/thermostat')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 2,
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {
        "publicNetworkAccess": "Enabled",
        "defaultAction": "Allow",
        "virtualNetworkRules": [],
        "ipRules": []
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/occupancy/occupancy')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'occupancy')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/thermostat/thermostat')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'thermostat')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Send"
        ]
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/occupancy/$Default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'occupancy')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/thermostat/$Default')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'thermostat')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
      ],
      "properties": {}
    },
    {
      "name": "[variables('storage_account_name')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": "true",
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "GET"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "POST"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "DELETE"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "MERGE"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/bronzeshortcutdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/data-source')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/webappassets')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/adlsfabricshortcut')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
        "name": "[variables('serverfarm_asp_fabric_name')]",
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2022-09-01",
        "location": "[variables('location')]",
        "sku": {
          "name": "S1",
          "tier": "Standard",
          "size": "S1",
          "family": "S",
          "capacity": 1
        },
        "kind": "linux",
        "properties": {
          "reserved": true
        }
    },
    {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2022-09-01",
        "name": "[variables('app_fabric_name')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_asp_fabric_name'))]"
        ],
        "kind": "app,linux",
        "properties": {
          "enabled": true,
          "hostNameSslStates": [
              {
                "name": "[concat(variables('app_fabric_name'), '.azurewebsites.net')]",
                "sslState": "Disabled",
                "hostType": "Standard"
              },
              {
                "name": "[concat(variables('app_fabric_name'), '.scm.azurewebsites.net')]",
                "sslState": "Disabled",
                "hostType": "Repository"
              }
          ],
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_asp_fabric_name'))]",
          "reserved": true,
          "isXenon": false,
          "hyperV": false,
          "siteConfig": {
              "numberOfWorkers": 1,
              "linuxFxVersion": "DOTNETCORE|6.0",
              "acrUseManagedIdentityCreds": false,
              "alwaysOn": true,
              "http20Enabled": false,
              "functionAppScaleLimit": 0,
              "minimumElasticInstanceCount": 0
          },
          "scmSiteAlsoStopped": false,
          "clientAffinityEnabled": true,
          "clientCertEnabled": false,
          "hostNamesDisabled": false,
          "containerSize": 0,
          "dailyMemoryTimeQuota": 0,
          "httpsOnly": false,
          "redundancyMode": "None",
          "storageAccountRequired": false,
          "keyVaultReferenceIdentity": "SystemAssigned"
        }
    },
    {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2022-09-01",
        "name": "[concat(variables('app_fabric_name'), '/web')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('app_fabric_name'))]"
        ],
        "properties": {
          "numberOfWorkers": 1,
          "defaultDocuments": [
              "Default.htm",
              "Default.html",
              "Default.asp",
              "index.htm",
              "index.html",
              "iisstart.htm",
              "default.aspx",
              "index.php",
              "hostingstart.html"
          ],
          "netFrameworkVersion": "v4.0",
          "linuxFxVersion": "DOTNETCORE|6.0",
          "requestTracingEnabled": false,
          "remoteDebuggingEnabled": false,
          "remoteDebuggingVersion": "VS2019",
          "httpLoggingEnabled": false,
          "acrUseManagedIdentityCreds": false,
          "logsDirectorySizeLimit": 35,
          "detailedErrorLoggingEnabled": false,
          "publishingUsername": "[concat('$', variables('app_fabric_name'))]",
          "scmType": "None",
          "use32BitWorkerProcess": true,
          "webSocketsEnabled": false,
          "alwaysOn": false,
          "managedPipelineMode": "Integrated",
          "virtualApplications": [
              {
                "virtualPath": "/",
                "physicalPath": "site\\wwwroot",
                "preloadEnabled": false
              }
          ],
          "loadBalancing": "LeastRequests",
          "experiments": {
              "rampUpRules": []
          },
          "autoHealEnabled": false,
          "vnetRouteAllEnabled": false,
          "vnetPrivatePortsCount": 0,
          "localMySqlEnabled": false,
          "ipSecurityRestrictions": [
              {
                "ipAddress": "Any",
                "action": "Allow",
                "priority": 1,
                "name": "Allow all",
                "description": "Allow all access"
              }
          ],
          "scmIpSecurityRestrictions": [
              {
                "ipAddress": "Any",
                "action": "Allow",
                "priority": 1,
                "name": "Allow all",
                "description": "Allow all access"
              }
          ],
          "scmIpSecurityRestrictionsUseMain": false,
          "http20Enabled": false,
          "minTlsVersion": "1.2",
          "scmMinTlsVersion": "1.2",
          "ftpsState": "AllAllowed",
          "preWarmedInstanceCount": 0,
          "functionAppScaleLimit": 0,
          "functionsRuntimeScaleMonitoringEnabled": false,
          "minimumElasticInstanceCount": 1,
          "azureStorageAccounts": {}
        }
    },
    {
        "type": "Microsoft.Web/sites/hostNameBindings",
        "apiVersion": "2022-09-01",
        "name": "[concat(variables('app_fabric_name'), '/', variables('app_fabric_name'), '.azurewebsites.net')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('app_fabric_name'))]"
        ],
        "properties": {
          "siteName": "[variables('app_fabric_name')]",
          "hostNameType": "Verified"
        }
    }
  ]
}