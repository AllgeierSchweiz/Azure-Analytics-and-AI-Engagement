{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "environment_code":{
         "type":"String",
         "metadata":{
            "description":"Suffix added to all resource name to make them unique. Should consist of only lower case alphabet and numbers. Total length should be less than 6 characters."
         }
      },
      "sql_administrator_login_password":{
         "type":"SecureString",
         "metadata":{
            "description":"Password for SQL Admin. Should have atleast one capital, one small alphapbet with one digit and one special character.Password should be at least 8 characters long."
         }
      },
      "pbi_workspace_id":{
         "type":"String",
         "metadata":{
            "description":"PowerBi workspace Id."
         }
      },
      "Tax_Collection_Realtime": {
        "type": "String",
        "metadata": {
          "description": "PowerBi streaming dataset URL for Tax Collection Realtime."
        }
      }
   },
  "variables": {
    "resource_group_name": "[resourceGroup().name]",
    "subscriptionid": "[subscription().subscriptionId]",
    "unique_suffix": "[concat(uniqueString(deployment().name), '-', parameters('environment_code'))]",
    "location": "[resourceGroup().location]",
    "key_vault_name": "[concat('kv-',variables('unique_suffix'))]",
    "storage_account_name": "[if(greater(length(concat('stfintax', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('stfintax',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('stfintax',parameters('environment_code'),uniqueString(deployment().name)) )]",
    "workspace_name_synapsefintax": "[concat('synapsefintax',parameters('environment_code'),uniqueString(deployment().name))]",
    "default_data_lake_storage_file_system_name": "tempdata",
    "default_data_lake_storage_account_url": "[concat('https://', variables('storage_account_name'), '.dfs.core.windows.net')]",
    "sql_compute_name": "FinTaxDW",
    "sql_administrator_login_id": "labsqladmin",
    "spark_compute_name": "Fintax",
    "sql_server_sku": "DW100c",
    "spark_auto_scale_enabled": "true",
    "spark_min_node_count": "3",
    "spark_max_node_count": "20",
    "spark_node_count": "1",
    "spark_node_size_family": "MemoryOptimized",
    "spark_node_size": "Large",
    "spark_auto_pause_enabled": "true",
    "spark_auto_pause_delay_in_minutes": "5",
    "spark_version": "2.4",
    "forms_fintax_name": "[concat('fintax-form-recognizer-',variables('unique_suffix'))]",
    "accounts_immersive_reader_fintax_name": "[concat('immersive-reader-fintax-',variables('unique_suffix'))]",
    "accounts_qnamaker_name": "[concat('qnamaker-',variables('unique_suffix'))]",
    "app_fintax_qna_name": "[concat('qnamaker-app-',variables('unique_suffix'))]",
    "serverfarms_app_fintax_qna_name": "[concat('asp-qnamaker-',variables('unique_suffix'))]",
    "iot_hub_name": "[concat('iothub-fintax-',variables('unique_suffix'))]",
    "eventhub_evh_namespace_fintax_name": "[concat('evh-namespace-',variables('unique_suffix'))]",
    "asa_name_fintax": "[concat('fintaxasa-',variables('unique_suffix'))]",
    "asa_query_fintax": "SELECT * INTO [adls-out] FROM [iot-hub-in]",
    "accounts_transqna_fintax_name": "[concat('transqna-fintax-',variables('unique_suffix'))]",
    "app_fintaxdemo_name": "[concat('fintaxdemo-app-',variables('unique_suffix'))]",
    "serverfarms_app_fintaxdemo_name": "[concat('asp-fintaxdemo-app-',variables('unique_suffix'))]",
    "app_immersive_reader_fintax_name": "[concat('immersive-reader-fintax-app-',variables('unique_suffix'))]",
    "serverfarms_app_immersive_reader_fintax_name": "[concat('asp-immersive-reader-fintax-app-',variables('unique_suffix'))]",
    "ai_fintax_immersive_reader_name": "[concat('ai-immersive-reader-fintax-',variables('unique_suffix'))]",
    "sites_app_vat_custsat_eventhub_fintax_name": "[concat('vat-custsat-eventhub-fintax-app-',variables('unique_suffix'))]",
    "serverfarm_app_vat_custsat_eventhub_fintax_name": "[concat('asp-vat-custsat-eventhub-fintax-',variables('unique_suffix'))]",
    "sites_app_taxcollectionrealtime_fintax_name": "[concat('taxcollectionrealtime-fintax-app-',variables('unique_suffix'))]",
    "serverfarm_app_taxcollectionrealtime_fintax_name": "[concat('asp-taxcollectionrealtime-fintax-',variables('unique_suffix'))]",
    "sites_app_iotfoottraffic_sensor_fintax_name": "[concat('iot-foottraffic-sensor-fintax-app-',variables('unique_suffix'))]",
    "serverfarm_app_iotfoottraffic_sensor_fintax_name": "[concat('asp-iot-foottraffic-sensor-fintax-',variables('unique_suffix'))]",	
	  "search_srch_fintax_name":"[concat('srch-fintax-',variables('unique_suffix'))]"
  },
  "resources": [
    {
      "name": "default",
      "type": "Microsoft.Resources/tags",
      "apiVersion": "2019-10-01",
      "properties": {
        "tags": {
          "DeploymentId": "[parameters('environment_code')]",
          "UniqueId": "[uniqueString(deployment().name)]",
          "WsId": "[parameters('pbi_workspace_id')]",
          "Tax_Collection_Realtime": "[parameters('Tax_Collection_Realtime')]"
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-04-30",
      "name": "[variables('accounts_transqna_fintax_name')]",
      "location": "global",
      "sku": {
        "name": "S1"
      },
      "kind": "TextTranslation",
      "properties": {
        "customSubDomainName": "[variables('accounts_transqna_fintax_name')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('key_vault_name')]",
      "apiVersion": "2018-02-14",
      "location": "[variables('location')]",
      "properties": {
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "vaultUri": "[concat('https://', variables('key_vault_name'), '.vault.azure.net/')]",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [

        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('key_vault_name'), '/SqlPassword')]",
      "apiVersion": "2018-02-14",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('key_vault_name'))]"
      ],
      "properties": {
        "value": "[parameters('sql_administrator_login_password')]"
      }
    },
    {
      "name": "[variables('iot_hub_name')]",
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2019-03-22",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 4
          }
        },
        "features": "None"
      }
    },
    {
      "name": "[concat(variables('iot_hub_name'), '/events/asa-cg')]",
      "type": "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
      "apiVersion": "2019-03-22",
      "dependsOn": [
        "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2019-06-01",
      "name": "[variables('asa_name_fintax')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name'))]",
        "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name'))]"
      ],
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US"
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(variables('asa_name_fintax'), '/iot-hub-in')]",
      "dependsOn": [
        "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_fintax'))]",
        "[concat('Microsoft.Devices/IotHubs/', variables('iot_hub_name'))]"
      ],
      "properties": {
        "type": "Stream",
        "datasource": {
          "type": "Microsoft.Devices/IotHubs",
          "properties": {
            "iotHubNamespace": "[variables('iot_hub_name')]",
            "sharedAccessPolicyName": "iothubowner",
            "sharedAccessPolicyKey": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name')), '2018-04-01').value[0].primaryKey]",
            "consumerGroupName": "asa-cg",
            "endpoint": "messages/events"
          }
        },
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2017-04-01-preview",
      "name": "[concat(variables('asa_name_fintax'), '/adls-out')]",
      "dependsOn": [
        "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_fintax'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/Blob",
          "properties": {
            "storageAccounts": [
              {
                "accountName": "[variables('storage_account_name')]",
                "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name')),'2019-04-01').keys[0].value]"
              }
            ],
            "container": "foottraffic-data",
            "pathPattern": "iot-data/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/",
            "dateFormat": "yyyy/MM/dd",
            "timeFormat": "HH",
            "authenticationMode": "ConnectionString"
          }
        },
        "timeWindow": "00:01:00",
        "sizeWindow": 2000,
        "serialization": {
          "type": "Parquet",
          "properties": {
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/transformations",
      "apiVersion": "2016-03-01",
      "name": "[concat(variables('asa_name_fintax'), '/query')]",
      "dependsOn": [
        "[concat('Microsoft.StreamAnalytics/streamingjobs/', variables('asa_name_fintax'))]"
      ],
      "properties": {
        "streamingUnits": 6,
        "query": "[variables('asa_query_fintax')]"
      }
    },
    {
      "name": "[variables('eventhub_evh_namespace_fintax_name')]",
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2018-01-01-preview",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false,
        "isAutoInflateEnabled": false,
        "maximumThroughputUnits": 0,
        "kafkaEnabled": true
      }
    },
    {
      "name": "[concat(variables('eventhub_evh_namespace_fintax_name'), '/RootManageSharedAccessKey')]",
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2017-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_fintax_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    },
    {
      "name": "[concat(variables('eventhub_evh_namespace_fintax_name'), '/evh-iomtconnector-fintax')]",
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_fintax_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 4,
        "status": "Active"
      }
    },
    {
      "name": "[concat(variables('eventhub_evh_namespace_fintax_name'), '/default')]",
      "type": "Microsoft.EventHub/namespaces/networkRuleSets",
      "apiVersion": "2018-01-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_fintax_name'))]"
      ],
      "properties": {
        "defaultAction": "Deny",
        "virtualNetworkRules": [

        ],
        "ipRules": [

        ]
      }
    },
    {
      "name": "[concat(variables('eventhub_evh_namespace_fintax_name'), '/evh-iomtconnector-fintax/RootManageSharedAccessKey')]",
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhub_evh_namespace_fintax_name'), 'evh-iomtconnector-fintax')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_fintax_name'))]"
      ],
      "properties": {
        "rights": [
          "Manage",
          "Listen",
          "Send"
        ]
      }
    },
    {
      "name": "[concat(variables('eventhub_evh_namespace_fintax_name'), '/evh-iomtconnector-fintax/$Default')]",
      "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "apiVersion": "2017-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhub_evh_namespace_fintax_name'), 'evh-iomtconnector-fintax')]",
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_fintax_name'))]"
      ],
      "properties": {

      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2017-04-18",
      "name": "[variables('forms_fintax_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "FormRecognizer",
      "properties": {
        "privateEndpointConnections": [

        ],
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "name": "[variables('workspace_name_synapsefintax')]",
      "type": "Microsoft.Synapse/workspaces",
      "apiVersion": "2021-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name'), '/blobServices/default/containers/', variables('default_data_lake_storage_file_system_name'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('default_data_lake_storage_account_url')]",
          "filesystem": "[variables('default_data_lake_storage_file_system_name')]"
        },
        "sqlAdministratorLogin": "[variables('sql_administrator_login_id')]",
        "sqlAdministratorLoginPassword": "[parameters('sql_administrator_login_password')]"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2021-05-01",
          "name": "allowAll",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_synapsefintax'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          }
        }
      ]
    },
    {
      "name": "[concat(variables('workspace_name_synapsefintax'), '/', variables('spark_compute_name'))]",
      "type": "Microsoft.Synapse/workspaces/bigDataPools",
      "apiVersion": "2021-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Synapse/workspaces', variables('workspace_name_synapsefintax'))]"
      ],
      "properties": {
        "nodeCount": "[variables('spark_node_count')]",
        "nodeSizeFamily": "[variables('spark_node_size_family')]",
        "nodeSize": "[variables('spark_node_size')]",
        "autoScale": {
          "enabled": "[variables('spark_auto_scale_enabled')]",
          "minNodeCount": "[variables('spark_min_node_count')]",
          "maxNodeCount": "[variables('spark_max_node_count')]"
        },
        "autoPause": {
          "enabled": "[variables('spark_auto_pause_enabled')]",
          "delayInMinutes": "[variables('spark_auto_pause_delay_in_minutes')]"
        },
        "sparkVersion": "[variables('spark_version')]"
      }
    },
    {
      "name": "[concat(variables('workspace_name_synapsefintax'), '/', variables('sql_compute_name'))]",
      "type": "Microsoft.Synapse/workspaces/sqlPools",
      "apiVersion": "2021-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', variables('workspace_name_synapsefintax'))]"
      ],
      "sku": {
        "name": "[variables('sql_server_sku')]"
      },
      "properties": {
        "createMode": "Default",
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2021-04-30",
      "name": "[variables('accounts_immersive_reader_fintax_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "ImmersiveReader",
      "identity": {
        "type": "None",
        "userAssignedIdentities": {

        }
      },
      "properties": {
        "customSubDomainName": "[variables('accounts_immersive_reader_fintax_name')]",
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [

          ],
          "ipRules": [

          ]
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "name": "[variables('storage_account_name')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "[concat('default/', variables('default_data_lake_storage_file_system_name'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
          ]
        }
      ]
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "GET"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "POST"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "DELETE"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            },
            {
              "allowedOrigins": [
                "*"
              ],
              "allowedMethods": [
                "MERGE"
              ],
              "maxAgeInSeconds": 1000,
              "exposedHeaders": [
                "*"
              ],
              "allowedHeaders": [
                "*"
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": [

          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": [

          ]
        }
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/revisions')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/snapshots')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/snapshotzips')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/azure-webjobs-hosts')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/azure-webjobs-secrets')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/sc-fintax-form-rec-training-folder')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/foottraffic-data')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/sc-fintax-form-recognizer-990')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/sc-usid')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/azureml-incident-input')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/training-data-output')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/adfstagedpolybasetempdata')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/file1')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/formrecogfiles')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/inputpdf')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/invoice-tax')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/mlimages')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/iot')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/fintaxdemo')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/data')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/esg-migrate')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/fraud-detection-sample-nyrealestate')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/gremlin-icons')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/marketing-data')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/pbis')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/powerdatasets')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/saphana')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat(variables('storage_account_name'), '/default/customcsv')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/webappassets')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      }
    },
    {
      "name": "[concat( variables('storage_account_name'), '/default/scm-releases')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
      ],
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      }
    },
    {
      "name": "[variables('serverfarm_app_vat_custsat_eventhub_fintax_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('sites_app_vat_custsat_eventhub_fintax_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_vat_custsat_eventhub_fintax_name'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('sites_app_vat_custsat_eventhub_fintax_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('sites_app_vat_custsat_eventhub_fintax_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_vat_custsat_eventhub_fintax_name'))]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "PYTHON|3.7",
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "fintaxEventhubReportConfig",
              "value": "[concat('{\"EventhubName\":\"evh-iomtconnector-fintax\",\"main_data_frequency_seconds\":3,\"urlStringEventhub\":\"', listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', variables('eventhub_evh_namespace_fintax_name'), 'evh-iomtconnector-fintax', 'RootManageSharedAccessKey'), '2017-04-01').primaryKey, '\": [{\"VATBefore\": {\"minValue\": 58000000000,\"maxValue\": 63360000000}},{\"VATMid\": {\"minValue\": 40000000000,\"maxValue\": 45000000000}},{\"VATAfter\": {\"minValue\": 82000000000,\"maxValue\": 86000000000}},{\"TaxPayerSatisfactionBefore\": {\"minValue\": 45.0,\"maxValue\": 50.0}},{\"TaxPayerSatisfactionMid\": {\"minValue\": 84.3,\"maxValue\": 87.0}},{\"TaxPayerSatisfactionAfter\": {\"minValue\": 90.0,\"maxValue\": 93.0}},{\"TaxpayersBefore\": {\"minValue\": 69000,\"maxValue\": 72200}},{\"TaxpayersMid\": {\"minValue\": 190000,\"maxValue\": 201000}},{\"TaxpayersAfter\": {\"minValue\": 235000,\"maxValue\": 275000}},{\"VATMax\": {\"minValue\":86336755000,\"maxValue\":86336755000}},{\"VATTargetBefore\": {\"minValue\":69000000000,\"maxValue\":69000000000}},{\"VATTargetMid\": {\"minValue\":49700000000,\"maxValue\":49700000000}},{\"VATTargetAfter\": {\"minValue\":75800000000,\"maxValue\":75800000000}},{\"TaxpayersTargetBefore\": {\"minValue\": 750680,\"maxValue\": 750680}},{\"TaxpayersTargetMid\": {\"minValue\": 765600,\"maxValue\": 765600}},{\"TaxpayersTargetAfter\": {\"minValue\": 697360,\"maxValue\": 697360}},{\"TaxPayerSatisfactionTarget\": {\"minValue\": 84.0,\"maxValue\": 84.0}},{\"TaxPayerSatisfactionMax\": {\"minValue\": 100.0,\"maxValue\": 100.0}}]}')]"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_vat_custsat_eventhub_fintax_name'), '/ftp')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_vat_custsat_eventhub_fintax_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_vat_custsat_eventhub_fintax_name'), '/scm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_vat_custsat_eventhub_fintax_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_vat_custsat_eventhub_fintax_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_vat_custsat_eventhub_fintax_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "PYTHON|3.7",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2017",
        "httpLoggingEnabled": true,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 100,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$',variables('sites_app_vat_custsat_eventhub_fintax_name'))]",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "cors": {
          "allowedOrigins": [
            "https://botservice.hosting.portal.azure.net",
            "https://hosting.onecloud.azure-test.net/"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.0",
        "ftpsState": "AllAllowed",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_vat_custsat_eventhub_fintax_name'), '/', variables('sites_app_vat_custsat_eventhub_fintax_name'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_vat_custsat_eventhub_fintax_name'))]"
      ],
      "properties": {
        "siteName": "[variables('sites_app_vat_custsat_eventhub_fintax_name')]",
        "hostNameType": "Verified"
      }
    },
    {
      "name": "[variables('serverfarm_app_taxcollectionrealtime_fintax_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('sites_app_taxcollectionrealtime_fintax_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_taxcollectionrealtime_fintax_name'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('sites_app_taxcollectionrealtime_fintax_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('sites_app_taxcollectionrealtime_fintax_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_taxcollectionrealtime_fintax_name'))]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "PYTHON|3.7",
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "fintaxReportsConfig",
              "value": "[concat('{\"main_data_frequency_seconds\":3,\"urlStringPowerBI\":\"',parameters('Tax_Collection_Realtime'),'\",\"data\": [{\"VATBefore\": {\"minValue\": 58000000000,\"maxValue\": 63360000000}},{\"VATMid\": {\"minValue\": 40000000000,\"maxValue\": 45000000000}},{\"VATAfter\": {\"minValue\": 82000000000,\"maxValue\": 86000000000}},{\"TaxPayerSatisfactionBefore\": {\"minValue\": 45.0,\"maxValue\": 50.0}},{\"TaxPayerSatisfactionMid\": {\"minValue\": 84.3,\"maxValue\": 87.0}},{\"TaxPayerSatisfactionAfter\": {\"minValue\": 90.0,\"maxValue\": 93.0}},{\"TaxpayersBefore\": {\"minValue\": 69000,\"maxValue\": 72200}},{\"TaxpayersMid\": {\"minValue\": 190000,\"maxValue\": 201000}},{\"TaxpayersAfter\": {\"minValue\": 235000,\"maxValue\": 275000}},{\"VATMax\": {\"minValue\":86336755000,\"maxValue\":86336755000}},{\"VATTargetBefore\": {\"minValue\":69000000000,\"maxValue\":69000000000}},{\"VATTargetMid\": {\"minValue\":49700000000,\"maxValue\":49700000000}},{\"VATTargetAfter\": {\"minValue\":75800000000,\"maxValue\":75800000000}},{\"TaxpayersTargetBefore\": {\"minValue\": 750680,\"maxValue\": 750680}},{\"TaxpayersTargetMid\": {\"minValue\": 765600,\"maxValue\": 765600}},{\"TaxpayersTargetAfter\": {\"minValue\": 697360,\"maxValue\": 697360}},{\"TaxPayerSatisfactionTarget\": {\"minValue\": 84.0,\"maxValue\": 84.0}},{\"TaxPayerSatisfactionMax\": {\"minValue\": 100.0,\"maxValue\": 100.0}}]}')]"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_taxcollectionrealtime_fintax_name'), '/ftp')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_taxcollectionrealtime_fintax_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_taxcollectionrealtime_fintax_name'), '/scm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_taxcollectionrealtime_fintax_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_taxcollectionrealtime_fintax_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_taxcollectionrealtime_fintax_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "PYTHON|3.7",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2017",
        "httpLoggingEnabled": true,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 100,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$',variables('sites_app_taxcollectionrealtime_fintax_name'))]",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "cors": {
          "allowedOrigins": [
            "https://botservice.hosting.portal.azure.net",
            "https://hosting.onecloud.azure-test.net/"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.0",
        "ftpsState": "AllAllowed",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_taxcollectionrealtime_fintax_name'), '/', variables('sites_app_taxcollectionrealtime_fintax_name'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_taxcollectionrealtime_fintax_name'))]"
      ],
      "properties": {
        "siteName": "[variables('sites_app_taxcollectionrealtime_fintax_name')]",
        "hostNameType": "Verified"
      }
    },
    {
      "name": "[variables('serverfarm_app_iotfoottraffic_sensor_fintax_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('sites_app_iotfoottraffic_sensor_fintax_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_iotfoottraffic_sensor_fintax_name'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('sites_app_iotfoottraffic_sensor_fintax_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('sites_app_iotfoottraffic_sensor_fintax_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_iotfoottraffic_sensor_fintax_name'))]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "PYTHON|3.7",
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "IoTHubConfig",
              "value": ""
            },
            {
              "name": "IoTSimulatorConfigs",
              "value": "{\"main_data_frequency_seconds\":1,\"data\":[{\"before-foottraffic\":{\"minValue\":18,\"maxValue\":25}},{\"after-foottraffic\":{\"minValue\":35,\"maxValue\":45}}]}"
            },
            {
              "name": "WEBSITE_HTTPLOGGING_RETENTION_DAYS",
              "value": "7"
            }
          ]
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "customDomainVerificationId": "B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_iotfoottraffic_sensor_fintax_name'), '/ftp')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_fintax_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_iotfoottraffic_sensor_fintax_name'), '/scm')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_fintax_name'))]"
      ],
      "properties": {
        "allow": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_iotfoottraffic_sensor_fintax_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_fintax_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "PYTHON|3.7",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2017",
        "httpLoggingEnabled": true,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 100,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$',variables('sites_app_iotfoottraffic_sensor_fintax_name'))]",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "cors": {
          "allowedOrigins": [
            "https://botservice.hosting.portal.azure.net",
            "https://hosting.onecloud.azure-test.net/"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.0",
        "ftpsState": "AllAllowed",
        "preWarmedInstanceCount": 0,
        "functionAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('sites_app_iotfoottraffic_sensor_fintax_name'), '/', variables('sites_app_iotfoottraffic_sensor_fintax_name'), '.azurewebsites.net')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_fintax_name'))]"
      ],
      "properties": {
        "siteName": "[variables('sites_app_iotfoottraffic_sensor_fintax_name')]",
        "hostNameType": "Verified"
      }
    },
    {
      "name": "[variables('serverfarms_app_fintaxdemo_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('app_fintaxdemo_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_fintaxdemo_name'))]"
      ],
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('app_fintaxdemo_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('app_fintaxdemo_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_fintaxdemo_name'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {

        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('app_fintaxdemo_name'), '/web')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('app_fintaxdemo_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "linuxFxVersion": "DOTNETCORE|3.1",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$', variables('app_fintaxdemo_name'))]",
        "azureStorageAccounts": {

        },
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": true
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": [

          ]
        },
        "autoHealEnabled": false,
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "name": "[variables('serverfarms_app_immersive_reader_fintax_name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1"
      },
      "kind": "app",
      "properties": {
        "name": "[variables('serverfarms_app_immersive_reader_fintax_name')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('ai_fintax_immersive_reader_name')]",
      "location": "[variables('location')]",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Bluefield",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('app_immersive_reader_fintax_name')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Insights/components/', toLower(variables('ai_fintax_immersive_reader_name')))]",
        "[concat('Microsoft.Web/serverfarms/', toLower(variables('serverfarms_app_immersive_reader_fintax_name')))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('app_immersive_reader_fintax_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('app_immersive_reader_fintax_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('serverfarms_app_immersive_reader_fintax_name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "disabled",
              "slotSetting": false
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "disabled",
              "slotSetting": false
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2",
              "slotSetting": false
            },
            {
              "name": "DiagnosticServices_EXTENSION_VERSION",
              "value": "disabled",
              "slotSetting": false
            },
            {
              "name": "InstrumentationEngine_EXTENSION_VERSION",
              "value": "disabled",
              "slotSetting": false
            },
            {
              "name": "SnapshotDebugger_EXTENSION_VERSION",
              "value": "disabled",
              "slotSetting": false
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "value": "disabled",
              "slotSetting": false
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "recommended",
              "slotSetting": false
            },
            {
              "name": "AppInsights_Instrumentation_Key",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('ai_fintax_immersive_reader_name'))).InstrumentationKey]",
              "slotSetting": false
            }
          ],
          "use32BitWorkerProcess": true,
          "alwaysOn": true,
          "managedPipelineMode": "Integrated"
        },
        "httpsOnly": true
      }
    },
    {
      "type": "microsoft.insights/components/ProactiveDetectionConfigs",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(variables('ai_fintax_immersive_reader_name'), '/slowserverresponsetime')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('microsoft.insights/components', variables('ai_fintax_immersive_reader_name'))]"
      ],
      "properties": {
        "ruleDefinitions": {
          "Name": "slowserverresponsetime",
          "DisplayName": "Slow server response time",
          "Description": "Smart Detection rules notify you of performance anomaly issues.",
          "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
          "IsHidden": false,
          "IsEnabledByDefault": true,
          "IsInPreview": false,
          "SupportsEmailNotifications": true
        },
        "enabled": true,
        "sendEmailsToSubscriptionOwners": true,
        "customEmails": []
      }
    },
	 {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2021-04-30",
            "name": "[variables('accounts_qnamaker_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', variables('app_fintax_qna_name'))]",
                "[resourceId('Microsoft.Search/searchServices/', variables('search_srch_fintax_name'))]"
            ],
            "sku": {
                "name": "S0"
            },
            "kind": "QnAMaker",
            "properties": {
                "apiProperties": {
                    "qnaRuntimeEndpoint": "[concat('https://',reference(resourceId('Microsoft.Web/sites', variables('app_fintax_qna_name'))).hostNames[0])]"
                },
                "customSubDomainName": "[variables('accounts_qnamaker_name')]"
            }
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2015-08-19",
            "name": "[variables('search_srch_fintax_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "basic"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "Default"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[variables('app_fintax_qna_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('serverfarms_app_fintax_qna_name'))]"
            ],
            "properties": {
                "enabled": true,
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                },
                "name": "[variables('app_fintax_qna_name')]",
                "serverFarmId": "[concat('/subscriptions/', subscription().SubscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('serverfarms_app_fintax_qna_name'))]",
                "hostingEnvironment": ""
            },
            "resources": [
                {
                    "type": "config",
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('app_fintax_qna_name'))]",
                        "[resourceId('Microsoft.Search/searchServices/', variables('search_srch_fintax_name'))]"
                    ],
                    "properties": {
                        "AzureSearchName": "[variables('search_srch_fintax_name')]",
                        "AzureSearchAdminKey": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('search_srch_fintax_name')), '2015-08-19').primaryKey]",
                        "PrimaryEndpointKey": "[concat(variables('app_fintax_qna_name'), '-PrimaryEndpointKey')]",
                        "SecondaryEndpointKey": "[concat(variables('app_fintax_qna_name'), '-SecondaryEndpointKey')]",
                        "DefaultAnswer": "No good match found in KB.",
                        "QNAMAKER_EXTENSION_VERSION": "latest"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('serverfarms_app_fintax_qna_name')]",
            "location": "[variables('location')]",
            "sku": {
                "Tier": "Standard",
                "Name": "S1"
            },
            "properties": {
                "name": "[variables('serverfarms_app_fintax_qna_name')]",
                "workerSizeId": "0",
                "reserved": false,
                "numberOfWorkers": "1",
                "hostingEnvironment": ""
            }
        }
  ],
   "outputs":{
      
   }
}